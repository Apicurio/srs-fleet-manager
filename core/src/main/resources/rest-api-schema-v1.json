{
    "openapi": "3.0.2",
    "info": {
        "title": "Managed Service Registry - Service API - v1",
        "version": "1.0.0",
        "description": "Main entry point for the system, responsible for all sorts of management operations for the whole service of managed service registry.",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "paths": {
        "/api/v1/registries": {
            "summary": "Manage the list of all registries.",
            "description": "",
            "get": {
                "tags": [
                    "Registries"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Registry"
                                    }
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getRegistries",
                "summary": "Get the list of all registries.",
                "description": ""
            },
            "post": {
                "requestBody": {
                    "description": "A new `Registry` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistryCreate"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Registries"
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Registry"
                                }
                            }
                        },
                        "description": "A successful response. The full request to create a new `Registry` is processed asynchronously. User should verify the result of the operation by reading the `status` property of the created `Registry` entity."
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "createRegistry",
                "summary": "Create a Registry.",
                "description": ""
            }
        },
        "/api/v1/registries/{registryId}": {
            "summary": "Manage a specific Registry.",
            "description": "",
            "get": {
                "tags": [
                    "Registries"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Registry"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `Registry`."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getRegistry",
                "summary": "Get a Registry",
                "description": "Gets the details of a single instance of a `Registry`."
            },
            "delete": {
                "tags": [
                    "Registries"
                ],
                "responses": {
                    "204": {
                        "description": "Successful response."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "deleteRegistry",
                "summary": "Delete a Registry",
                "description": "Deletes an existing `Registry`."
            },
            "parameters": [
                {
                    "name": "registryId",
                    "description": "A unique identifier for a `Registry`.",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/api/v1/admin/tasks": {
            "summary": "Manage the list of all tasks executed on the server.",
            "get": {
                "tags": [
                    "Admin",
                    "Tasks"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getTasks",
                "summary": "Get the list of all tasks executed on the server."
            }
        },
        "/api/v1/admin/tasks/{taskId}": {
            "summary": "Manage a specific task executed on the server.",
            "get": {
                "tags": [
                    "Admin",
                    "Tasks"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getTask",
                "summary": "Get a specific task executed on the server."
            },
            "parameters": [
                {
                    "name": "taskId",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/api/v1": {
            "summary": "Get the OpenAPI schema for version 1 of this REST API.",
            "get": {
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "A successful response."
                    }
                },
                "operationId": "getSchema",
                "summary": "Get the OpenAPI schema for version 1 of this REST API."
            }
        },
        "/api/v1/registryDeployments": {
            "summary": "Manage the list of all registry deployments.",
            "get": {
                "tags": [
                    "RegistryDeployments"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RegistryDeployment"
                                    }
                                }
                            }
                        },
                        "description": "A successful response."
                    }
                },
                "operationId": "getRegistryDeployments",
                "summary": "Get the list of all registry deployments."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistryDeploymentCreate"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "RegistryDeployments"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistryDeployment"
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorInfo"
                                }
                            }
                        },
                        "description": "A Registry Deployment with the same configuration already exists."
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "createRegistryDeployment",
                "summary": "Create a registry deployment."
            }
        },
        "/api/v1/registryDeployments/{registryDeploymentId}": {
            "summary": "Manage a specific registry deployment.",
            "description": "",
            "get": {
                "tags": [
                    "RegistryDeployments"
                ],
                "parameters": [
                    {
                        "name": "registryDeploymentId",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistryDeploymentCreate"
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getRegistryDeployment",
                "summary": "Get a specific registry deployment."
            },
            "delete": {
                "tags": [
                    "RegistryDeployments"
                ],
                "parameters": [
                    {
                        "name": "registryDeploymentId",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "A successful response. The Registry Deployment has been deleted."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorInfo"
                                }
                            }
                        },
                        "description": "Could not delete Registry Deployment because there is a Registry deployed there."
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "deleteRegistryDeployment",
                "summary": "Delete a specific Registry Deployment."
            }
        }
    },
    "components": {
        "schemas": {
            "RegistryDeployment": {
                "description": "[Admins]",
                "required": [
                    "status",
                    "id",
                    "registryDeploymentUrl",
                    "tenantManagerUrl"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "tenantManagerUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "registryDeploymentUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RegistryDeploymentStatus",
                        "description": ""
                    }
                },
                "example": {
                    "id": 42,
                    "tenantApiUrl": "https://registry1-tenants.apps.example.com",
                    "location": {
                        "id": 42,
                        "region": "eu-west-1"
                    },
                    "resources": [
                        {
                            "id": 43,
                            "type": "ARTIFACT_VERSION_MAX_COUNT",
                            "used": 420,
                            "limit": 10000
                        }
                    ]
                }
            },
            "Registry": {
                "title": "Root Type for Registry",
                "description": "[Users]",
                "required": [
                    "id",
                    "registryUrl",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RegistryStatus",
                        "description": ""
                    },
                    "registryUrl": {
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "id": 42,
                    "registryUrl": "https://registry.apps.example.com/t/5213600b-afc9-487e-8cc3-339f4248d706",
                    "name": "my-registry",
                    "status": {
                        "status": "PROVISIONING",
                        "lastUpdated": "2021-02-01T12:16:33Z"
                    }
                }
            },
            "RegistryStatus": {
                "description": "TODO \n\nSee also https://docs.google.com/document/d/1mPmouFJBgdDe6Pq7o30LP-R9mCASPSJrokFq-VAqnmc",
                "required": [
                    "status",
                    "lastUpdated"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/RegistryStatusValue",
                        "description": ""
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "description": "ISO 8601 UTC timestamp",
                        "type": "string"
                    }
                },
                "example": {
                    "status": "PROVISIONING",
                    "lastUpdated": "2021-02-01T12:16:33Z"
                }
            },
            "RegistryCreate": {
                "title": "Root Type for RegistryCreate",
                "description": "",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "my-registry"
                }
            },
            "RegistryStatusValue": {
                "description": "",
                "enum": [
                    "PROVISIONING",
                    "AVAILABLE",
                    "UNAVAILABLE"
                ],
                "type": "string"
            },
            "RegistryDeploymentStatusValue": {
                "description": "",
                "enum": [
                    "PROCESSING",
                    "AVAILABLE",
                    "UNAVAILABLE"
                ],
                "type": "string"
            },
            "RegistryDeploymentStatus": {
                "description": "TODO \n\nSee also https://docs.google.com/document/d/1mPmouFJBgdDe6Pq7o30LP-R9mCASPSJrokFq-VAqnmc",
                "required": [
                    "status",
                    "lastUpdated"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/RegistryDeploymentStatusValue",
                        "description": ""
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "description": "ISO 8601 UTC timestamp",
                        "type": "string"
                    }
                },
                "example": {
                    "status": "PROCESSING",
                    "lastUpdated": "2021-02-01T12:16:33Z"
                }
            },
            "ErrorInfo": {
                "$ref": "#/components/schemas/ErrorInfo1"
            },
            "RegistryDeploymentCreate": {
                "description": "",
                "required": [
                    "registryDeploymentUrl",
                    "tenantManagerUrl"
                ],
                "type": "object",
                "properties": {
                    "registryDeploymentUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "tenantManagerUrl": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Task": {
                "description": "",
                "required": [
                    "id",
                    "type",
                    "data",
                    "schedule"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "data": {
                        "description": "",
                        "type": "string"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/TaskSchedule",
                        "description": ""
                    }
                }
            },
            "TaskSchedule": {
                "title": "Root Type for TaskSchedule",
                "description": "",
                "required": [
                    "firstExecuteAt"
                ],
                "type": "object",
                "properties": {
                    "firstExecuteAt": {
                        "description": "Timestamp in the ISO 8601 format.",
                        "type": "string"
                    },
                    "priority": {
                        "format": "int32",
                        "description": "Higher number means higher priority. Default priority is 5.",
                        "type": "integer"
                    },
                    "intervalSec": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "example": {
                    "firstExecuteAt": "",
                    "intervalSec": 300,
                    "priority": 5
                }
            },
            "ErrorInfo1": {
                "title": "Root Type for ErrorInfo",
                "description": "Details about a specific error returned by the server.",
                "required": [
                    "error_code"
                ],
                "type": "object",
                "properties": {
                    "error_code": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "example": {
                    "error_code": 500,
                    "message": "An error occurred on the server."
                }
            }
        },
        "responses": {
            "NotFound": {
                "$ref": "#/components/responses/NotFound1"
            },
            "ServerError": {
                "$ref": "#/components/responses/ServerError1"
            },
            "NotFound1": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInfo1"
                        }
                    }
                },
                "description": "The response returned when something is requested but cannot be found."
            },
            "ServerError1": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInfo1"
                        }
                    }
                },
                "description": "The response sent from the server when an unexpected error occurs (for example \na database connection error)."
            }
        }
    }
}