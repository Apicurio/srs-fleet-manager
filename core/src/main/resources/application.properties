# === PROD

%prod.quarkus.log.level=${LOG_LEVEL:INFO}
%prod.quarkus.log.console.enable=true

%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=${SERVICE_API_DATASOURCE_URL}
%prod.quarkus.datasource.username=${SERVICE_API_DATASOURCE_USERNAME:postgres}
%prod.quarkus.datasource.password=${SERVICE_API_DATASOURCE_PASSWORD:postgres}

%prod.quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQL95Dialect
%prod.quarkus.hibernate-orm.database.generation=update

%prod.quarkus.quartz.force-start=true

%prod.auth.admin.server-url=${AUTH_ADMIN_URL:http://localhost:8090/auth}
%prod.auth.admin.realm=${AUTH_ADMIN_REALM:master}
%prod.auth.admin.client-id=${AUTH_ADMIN_CLIENT_ID:admin-cli}
%prod.auth.admin.username=${AUTH_ADMIN_USERNAME}
%prod.auth.admin.password=${AUTH_ADMIN_PASSWORD}
%prod.auth.admin.grant-type=${AUTH_ADMIN_GRANT_TYPE:password}

%prod.auth.realm.roles=${AUTH_REALM_ROLES:sr-admin,sr-developer,sr-readonly}
%prod.auth.tenant-id.prefix=${TENANT_ID_PREFIX:sr-tenant}
%prod.auth.api.client-id=${AUTH_API_CLIENT_ID:registry-api}
%prod.auth.ui.client-id=${AUTH_UI_CLIENT_ID:apicurio-registry}

# === DEV

%dev.quarkus.log.level=${LOG_LEVEL:INFO}
%dev.quarkus.log.console.enable=true

%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:service-api
%dev.quarkus.datasource.username=sa
%dev.quarkus.datasource.password=

%dev.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%dev.quarkus.hibernate-orm.database.generation=drop-and-create

%dev.quarkus.quartz.force-start=true

%dev.auth.admin.server-url=${AUTH_ADMIN_URL:http://localhost:8090}
%dev.auth.admin.realm=${AUTH_ADMIN_REALM:master}
%dev.auth.admin.client-id=${AUTH_ADMIN_CLIENT_ID:admin-cli}
%dev.auth.admin.username=${AUTH_ADMIN_USERNAME}
%dev.auth.admin.password=${AUTH_ADMIN_PASSWORD}
%dev.auth.admin.grant-type=${AUTH_ADMIN_GRANT_TYPE:password}

%dev.auth.realm.roles=${AUTH_REALM_ROLES:sr-admin,sr-developer,sr-readonly}
%dev.auth.tenant-id.prefix=${TENANT_ID_PREFIX:sr-tenant}
%dev.auth.api.client-id=${AUTH_API_CLIENT_ID:registry-api}
%dev.auth.ui.client-id=${AUTH_UI_CLIENT_ID:apicurio-registry}



# === TEST

%test.quarkus.log.level=${LOG_LEVEL:INFO}
%test.quarkus.log.console.enable=true

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:service-api
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=

%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%test.quarkus.hibernate-orm.database.generation=drop-and-create

%test.quarkus.quartz.force-start=true

%test.auth.admin.server-url=${AUTH_ADMIN_URL:_}
%test.auth.admin.realm=${AUTH_ADMIN_REALM:_}
%test.auth.admin.client-id=${AUTH_ADMIN_CLIENT_ID:_}
%test.auth.admin.username=${AUTH_ADMIN_USERNAME:_}
%test.auth.admin.password=${AUTH_ADMIN_PASSWORD:_}
%test.auth.admin.grant-type=${AUTH_ADMIN_GRANT_TYPE:password}

%test.auth.realm.roles=${AUTH_REALM_ROLES:_}
%test.auth.tenant-id.prefix=${TENANT_ID_PREFIX:sr-tenant}
%test.auth.api.client-id=${AUTH_API_CLIENT_ID:registry-api}
%test.auth.ui.client-id=${AUTH_UI_CLIENT_ID:apicurio-registry}